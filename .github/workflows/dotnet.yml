name: Development
on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Restore dependencies
        run: dotnet restore .\src\AdventureWorksCore.sln
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"maciejgos_adventureworks-core" /o:"maciejgos" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build .\src\AdventureWorksCore.sln
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      - name: Build
        run: dotnet build .\src\AdventureWorksCore.sln --no-restore
      - name: Test
        run: dotnet test .\src\AdventureWorksCore.Tests\AdventureWorksCore.Tests.csproj --no-build --verbosity normal
  infrastructure:
    name: Terraform
    runs-on: ubuntu-latest
    needs: [build]
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
    defaults:
      run:
        working-directory: infrastructure
    steps:
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Setup Terraform
      # You may pin to the exact commit or the version.
      # uses: hashicorp/setup-terraform@d22444889af304a44b997011fbabb81ff705a7b4
      uses: hashicorp/setup-terraform@v1.2.1
      
    - name: Terraform Init
      id: init
      run: terraform init
      
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true
      
    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve
  tests:
    name: 'Integration & e2e tests'
    runs-on: ubuntu-latest
    needs: [infrastructure]
    steps:
      #- name: Pause
      #  run: sleep 10
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis      
      - uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} 
        name: Az login
      - uses: Azure/get-keyvault-secrets@v1
        id: keyvaultget
        with:
          keyvault: "candmdevadvkeyvault"
          secrets: 'ApplicationDbConnection'  # comma separated list of secret keys that need to be fetched from the Key Vault 
        name: Get secrete
      - name: Test
        env:
          CONNECTION_STRING: ${{ steps.keyvaultget.outputs.ApplicationDbConnection }}
        run: dotnet test ./src/AdventureWorksCore.Tests.Integration/AdventureWorksCore.Tests.Integration.csproj --no-build --verbosity normal
  cleanup_dev:
    name: 'Cleanup Dev'
    runs-on: ubuntu-latest
    needs: [tests]
    env:
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
    defaults:
      run:
        working-directory: infrastructure
    steps:
    - uses: actions/checkout@v2
      with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Setup Terraform
      # You may pin to the exact commit or the version.
      # uses: hashicorp/setup-terraform@d22444889af304a44b997011fbabb81ff705a7b4
      uses: hashicorp/setup-terraform@v1.2.1
      
    - name: Terraform Init
      id: init
      run: terraform init
    
    - name: Terraform Destroy
      id: destroy
      run: terraform destroy -auto-approve
